name: Deploy to Github Release
on:
    push:
        branches:
            - main

jobs:
    bundle:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@main

            - name: Setup Node.js
              uses: actions/setup-node@main

            - name: Install Deps and build
              run: |
                  npm ci
                  npm run build

            - name: Upload Assets
              uses: actions/upload-artifact@main
              with:
                  name: bundle
                  path: './build'

    deploy:
        needs: bundle
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@main

            - name: Download Plugin
              uses: actions/download-artifact@main
              with:
                  name: bundle
                  path: './build'

            - name: Get version
              id: version
              run: |
                  echo "VERSION=$(grep -Po 'Version: \K.*' style.css)" >> "$GITHUB_ENV"
              shell: bash

            - name: Zip theme directory
              run: zip -r theme.zip . -x '*.git*' -x '.github/**' -x 'composer.json' -x 'composer.lock' -x 'package.json' -x 'package-lock.json' -x 'webpack.config.js' -x 'README.md' -x 'phpcs.xml.dist'

            - name: Create Release
              id: create_release
              uses: actions/create-release@main
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
              with:
                  tag_name: v${{env.VERSION}}
                  release_name: Release ${{env.VERSION}}
                  draft: false
                  prerelease: false

            - name: Upload Release Asset
              uses: actions/upload-release-asset@main
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
                  asset_path: ./theme.zip
                  asset_name: theme.zip
                  asset_content_type: application/zip
